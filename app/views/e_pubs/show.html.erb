<% provide :page_title, @title || "Title" %>
<%# https://github.com/mlibrary/heliotrope/issues/1228 %>
<% content_for :head do %>
  <meta name="turbolinks-cache-control" content="no-cache">
<% end %>
<% provide :body do %>
<% if defined? @presenter.file_set_coins_title %>
  <span class="Z3988" title="<%= @presenter.file_set_coins_title %>"></span>
<% end %>
<div id="epub" class="<%= @subdomain %>">
  <div id="reader"></div>
  <% if @feedback.present? %>
      <!-- Modal -->
      <div id="feedbackModal" class="modal fade" role="dialog">
        <div class="modal-dialog" style="width:<%= @feedback_width %>px;">
          <!-- Modal content-->
          <div class="modal-content">
            <%= simple_form_for @feedback, html: { id: 'feedbackForm' } do |f| %>
              <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Feedback</h4>
              </div>
              <div class="modal-body">
              <% if @feedback.errors.any? %>
                <div id="error_explanation">
                  <h2><%= pluralize(@feedback.errors.count, "error") %> prohibited this feedback from being saved:</h2>
                  <ul>
                    <% @feedback.errors.full_messages.each do |message| %>
                      <li><%= message %></li>
                    <% end %>
                  </ul>
                </div>
              <% end %>
                <%= f.input :feedback, label: 'Feedback', required: true %>
              </div>
              <div class="modal-footer">
                <%= f.submit label: 'Submit', value: 'Submit', id: 'feedbackSubmit', class: 'btn btn-default' %>
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
              </div>
            <% end %>
          </div>
        </div>
      </div>
  <% end %>
  <script type="text/javascript">
    if ( true ) {
      //$("body").addClass("reading");
      var reader = cozy.reader('reader', {
        href: "<%= "#{main_app.epub_url.gsub!(/\?.*/, '')}/" %>",
        metadata: {
          doi: '<%= @citable_link %>',
          // TO-DO: iterate all creator given and family names for monograph
          // creator: [
          //    ''
          // ],
          // TO-DO: we currently don't store location metadata in the monograph
          // record. Should we? Can we rely on all EPUBs having location?
          location: 'Ann Arbor, MI'
        }
      });
      // Close reader/Return to previous screen widget
      cozy.control.widget.button({
  	    region: 'top.header.left',
  	    data: { label: '<i class="icon-x oi" data-glyph="x" aria-hidden="true"></i>'},
  	    template: `<button class="button--sm cozy-close" data-toggle="button" data-slot="label" aria-label="Close reader"></button>`,
  	    onClick: function() { window.location = "<%= "#{@back_link}" %>"; }
      }).addTo(reader);
      // Press brand widget
      // TO-DO: only show logo for publishers that also have CSS overrides. Currently only HEB has this.
      <% if defined? @subdomain %>
        // only include logos for heb and nyupress at this point
        <% if %w[heb nyupress].include? @subdomain %>
          cozy.control.widget.panel({
            region: 'top.header.left',
            template: `<div class="logo"><%= image_tag logo(@subdomain), alt: @subdomain %>`,
            data: { title: "<%= @subdomain %>" }
          }).addTo(reader);
        <% end %>
      <% end %>
      // Book/chapter title widget
      cozy.control.title({ region: 'top.header.left' }).addTo(reader);

      // Table of contents widget
      cozy.control.contents({ region: 'top.toolbar.left' }).addTo(reader);

      // Permalink widget
      cozy.control.widget.panel({
        region: 'top.toolbar.left',
        data: { title: "<%= @citable_link %>"},
  	    template: `<div class="permalink-label"><label class="u-screenreader" for="permalink">Permalink</label><form><input data-slot="title" type="text" id="permalink" value="" readonly="readonly" onclick="this.select(); document.execCommand('copy');"></form></div>`,
      }).addTo(reader);

      // Citation widget
      cozy.control.citation({ region: 'top.toolbar.left' }).addTo(reader);

      // Search widget
      <% unless Heliotrope::Application.config.cozy_epub_engine == 'readium' %>
      cozy.control.search({
        region: 'top.toolbar.left',
        searchUrl: "<%= @search_url %>"
      }).addTo(reader);
      <% end %>

      // Feedback widget
      <% if @feedback.present? %>
        $('#feedbackModal').on('show.bs.modal', function() {
          $('#feedbackForm')[0].reset();
          $('#feedbackSubmit').removeAttr('disabled');
        });
        $('#feedbackModal').on('shown.bs.modal', function() {
          $('#feedbackForm')[0].elements[3].focus();
        });
        $('#feedbackSubmit').click(function() {
          $('#feedbackModal').modal('hide');
        });
        cozy.control.widget.button({
          region: 'top.toolbar.right',
          template: '<button id="feedbackButton" type="button" class="button--sm" data-toggle="modal" data-target="#feedbackModal">Feedback</button>',
          onClick: function() {
          }
        }).addTo(reader);
      <% end %>

      // Fullscreen widget
      cozy.control.widget.button({
                        region: 'top.toolbar.right',
                        className: 'cozy-container-fullscreen',
                        template: '<button class="button--sm" data-toggle="button" data-slot="label" aria-label="Full screen"></button>',
                        data: { label: '<i id="fullscreen" class="icon-fullscreen-enter oi" data-glyph="fullscreen-enter" title="Fullscreen Mode" aria-hidden="true"></i>' },
                        onClick: function() {
                            reader.requestFullscreen();
                            if (!window.screenTop && !window.screenY) {
                              $('#fullscreen').attr('data-glyph', 'fullscreen-enter');
                            } else {
                              $('#fullscreen').attr('data-glyph', 'fullscreen-exit');
                            }
                        }
                    }).addTo(reader);
      // Reading preferences widget
      cozy.control.preferences({ region: 'top.toolbar.right' }).addTo(reader);

      // Paging widgets
      // cozy.control.pageFirst({ region: 'left.sidebar' }).addTo(reader);
      cozy.control.pagePrevious({ region: 'left.sidebar' }).addTo(reader);
      cozy.control.pageNext({ region: 'right.sidebar' }).addTo(reader);
      // cozy.control.pageLast({ region: 'right.sidebar' }).addTo(reader);
      // cozy.control.navigator({ region: 'book.navigator' }).addTo(reader);

      // Publisher/copyright widgets
      // cozy.control.publicationMetadata({ region: 'bottom.footer' }).addTo(reader);

      // Feedback widget
      cozy.control.widget.panel({
        region: 'bottom.navigator.left',
        className: 'cozy-panel-feedback',
        template: '<a href="https://docs.google.com/forms/d/e/1FAIpQLSeY04WhBtHGSXONu3jGiYnOcVzZxzHi3FGbS9ELg8rJdMpgpw/viewform?usp=sf_link" target="_blank" title="Report a problem or share feedback"><i class="icon-comment-square oi" data-glyph="comment-square" aria-hidden="true"></i></a>',
      }).addTo(reader);

      // Navigator widgets
      cozy.control.navigator({ region: 'bottom.navigator' }).addTo(reader);

      // Initiate EPUB Reader
      reader.start();
    }
  </script>
</div>
<%= render 'shared/ga' %>
<% end %>
<%= render template: 'layouts/boilerplate' %>
